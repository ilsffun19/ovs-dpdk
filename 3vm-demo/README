Before you start running the scripts, you need to edit the following files:
start-ovs-dpdk.sh - edit the PCI ID devices which you will bind to DPDK, and other_config:dpdk-lcore-mask=0x200000 to the socket core which you want the ovs daemon to run on.

set_pmd_thread.sh  - edit the core mask for 6C12T depending on the socket cores you are running. You need to set the higher priority cores.

createports_pvp-6P-6c12t.sh - edit the PCI ID devices which you bind to DPDK and also the core affinity for each port

power_on_vm-vhost-user-6P.sh - set the correct taskset for the cores the VM will be running on.


./disable_service.sh
./stop_services.sh
cd /root/ovs-dpdk/3vm-demo
./start-ovs-dpdk.sh
./set_pmd_thread.sh
./createports_pvp-6P-6c12t.sh

cd 3vms
power_on_vm-vhost-user1-2P.sh
power_on_vm-vhost-user2-2P.sh
power_on_vm-vhost-user3-2P.sh
./addroutes_pvp-6P-vpp-ip.sh

to connect to the VM:
from your host, you can login to the VM via:
ssh -l root localhost -p 2023  (for VM1)
ssh -l root localhost -p 2024  (for VM2)
ssh -l root localhost -p 2025  (for VM3)

login to the VM and then run the following in the VM to start VPP:
./setup_huge.sh
systemctl start vpp
telnet localhost 5002

vpp# exec /root/vpp-vrouter/vpp-2p.conf

Do VM CPU pinning to the host for optimization. You would need to do the following for each qemu VM.
Set the core affinity of the VM by doing the following:
ps -e |grep qemu
top -p <qemu PID> -d1 -H

For example:
# ps -e |grep qemu
71261 pts/0    00:07:13 qemu-system-x86
71287 pts/0    00:05:04 qemu-system-x86
71308 pts/0    00:03:46 qemu-system-x86

# top -p 71308 -d1 -H
  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND                                                                                               
71323 root      20   0 9291568  25524  11392 R 53.3  0.0   1:40.47 qemu-system-x86                                                                                       
71324 root      20   0 9291568  25524  11392 R 46.7  0.0   1:40.38 qemu-system-x86                                                                                       
71321 root      20   0 9291568  25524  11392 S  6.7  0.0   0:18.61 qemu-system-x86                                                                                       
71308 root      20   0 9291568  25524  11392 S  0.0  0.0   0:07.67 qemu-system-x86                                                                                       
71309 root      20   0 9291568  25524  11392 S  0.0  0.0   0:00.00 qemu-system-x86                                                                                       
71320 root      20   0 9291568  25524  11392 S  0.0  0.0   0:00.01 qemu-system-x86                                                                                       
71322 root      20   0 9291568  25524  11392 S  0.0  0.0   0:10.66 qemu-system-x86                                                                                       
71327 root      20   0 9291568  25524  11392 S  0.0  0.0   0:00.00 qemu-system-x86                                                                                       


Record the Thread PIDs which are utilizing the highest % of the core (.e.g PID 71323, 71324)
# taskset -pc -a 71308
pid 71308's current affinity list: 36-39
pid 71309's current affinity list: 36-39
pid 71320's current affinity list: 36-39
pid 71321's current affinity list: 36-39
pid 71322's current affinity list: 36-39
pid 71323's current affinity list: 36-39
pid 71324's current affinity list: 36-39
pid 71327's current affinity list: 36-39

taskset -pc -a 36 71308
taskset -pc 37 71323
taskset -pc 38 71324
taskset -pc 39 71321 <qemu thread PID which shows TIME+ the longest after 71323 and 71324>


Setup traffic generator to arp to the VPP and then start traffic.

