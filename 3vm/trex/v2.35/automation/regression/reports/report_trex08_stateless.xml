<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="36" errors="0" failures="0" skip="0"><testcase classname="stateless_tests.stl_general_test.STLBasic_Test" name="test_connectivity" time="0.419"><system-out><![CDATA[Starting TRex... done. (0s)
Connecting.
Connected
Mapping ports.
Got ports mapping: {'map': {0: 3, 1: 2, 2: 1, 3: 0}, 'bi': [(0, 3), (1, 2)], 'unknown': []}
]]></system-out></testcase><testcase classname="stateless_tests.stl_benchmark_test.STLBenchmark_Test" name="test_CPU_benchmark" time="220.446"><system-out><![CDATA[
Testing profile stl/udp_for_benchmarks.py, kwargs: {'packet_len': 64}
Done (9s), CPU util: 3.1218, norm_pps_per_core: 54.02mpps norm_bw_per_core:  27.66Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'stream_count': 10, 'packet_len': 64}
Done (10s), CPU util: 6.3588, norm_pps_per_core: 26.67mpps norm_bw_per_core:  13.66Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'stream_count': 100, 'packet_len': 64}
Done (7s), CPU util: 9.4344, norm_pps_per_core: 17.81mpps norm_bw_per_core:   9.12Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'packet_len': 128}
Done (10s), CPU util: 2.8044, norm_pps_per_core: 34.27mpps norm_bw_per_core:  35.03Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'packet_len': 256}
Done (5s), CPU util: 1.5924, norm_pps_per_core: 32.31mpps norm_bw_per_core:  64.19Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'packet_len': 512}
Done (9s), CPU util: 0.73282, norm_pps_per_core: 36.58mpps norm_bw_per_core: 149.33Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'packet_len': 1500}
Done (11s), CPU util: 0.23514, norm_pps_per_core: 39.89mpps norm_bw_per_core: 478.09Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'packet_len': 4000}
Done (11s), CPU util: 0.063266, norm_pps_per_core: 56.11mpps norm_bw_per_core: 1793.56Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'packet_len': 9000}
Done (7s), CPU util: 0.030136, norm_pps_per_core: 52.55mpps norm_bw_per_core: 3735.02Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'stream_count': 10, 'packet_len': 9000}
Done (3s), CPU util: 0.065632, norm_pps_per_core: 20.34mpps norm_bw_per_core: 1462.74Gb/core
Testing profile stl/udp_for_benchmarks.py, kwargs: {'stream_count': 100, 'packet_len': 9000}
Done (7s), CPU util: 0.14242, norm_pps_per_core: 10.93mpps norm_bw_per_core: 787.18Gb/core
Testing profile stl/imix.py, kwargs: {}
Done (10s), CPU util: 4.6374, norm_pps_per_core:  7.66mpps norm_bw_per_core:  23.31Gb/core
Testing profile stl/udp_1pkt_tuple_gen.py, kwargs: {'packet_len': 64}
Done (10s), CPU util: 21.48, norm_pps_per_core:  7.88mpps norm_bw_per_core:   4.04Gb/core
Testing profile stl/udp_1pkt_tuple_gen.py, kwargs: {'packet_len': 128}
Done (9s), CPU util: 10.52, norm_pps_per_core:  9.13mpps norm_bw_per_core:   9.33Gb/core
Testing profile stl/udp_1pkt_tuple_gen.py, kwargs: {'packet_len': 256}
Done (3s), CPU util: 7.6714, norm_pps_per_core:  6.66mpps norm_bw_per_core:  11.43Gb/core
Testing profile stl/udp_1pkt_tuple_gen.py, kwargs: {'packet_len': 512}
Done (9s), CPU util: 3.9738, norm_pps_per_core:  6.75mpps norm_bw_per_core:  27.57Gb/core
Testing profile stl/udp_1pkt_tuple_gen.py, kwargs: {'packet_len': 1500}
Done (11s), CPU util: 1.2602, norm_pps_per_core:  7.44mpps norm_bw_per_core:  89.14Gb/core
Testing profile stl/udp_1pkt_tuple_gen.py, kwargs: {'packet_len': 4000}
Done (13s), CPU util: 0.28796, norm_pps_per_core: 12.31mpps norm_bw_per_core: 393.89Gb/core
Testing profile stl/udp_1pkt_tuple_gen.py, kwargs: {'packet_len': 9000}
Done (11s), CPU util: 0.14544, norm_pps_per_core: 10.87mpps norm_bw_per_core: 781.64Gb/core
Testing profile stl/pcap.py, kwargs: {'loop_count': 0, 'ipg_usec': 2}
Done (7s), CPU util: 0.38664, norm_pps_per_core: 36.35mpps norm_bw_per_core:   26.2Gb/core
Testing profile stl/udp_rand_len_9k.py, kwargs: {}
Done (10s), CPU util: 0.8054, norm_pps_per_core:  4.08mpps norm_bw_per_core: 140.74Gb/core
Testing profile stl/hlt/hlt_udp_rand_len_9k.py, kwargs: {}
Done (5s), CPU util: 0.74564, norm_pps_per_core:  4.27mpps norm_bw_per_core: 147.97Gb/core
]]></system-out></testcase><testcase classname="stateless_tests.stl_capture_test.STLCapture_Test" name="test_arp_capture" time="0.415"></testcase><testcase classname="stateless_tests.stl_capture_test.STLCapture_Test" name="test_basic_capture" time="0.376"></testcase><testcase classname="stateless_tests.stl_capture_test.STLCapture_Test" name="test_ping_capture" time="7.401"></testcase><testcase classname="stateless_tests.stl_capture_test.STLCapture_Test" name="test_stress_capture" time="23.027"><system-out><![CDATA[

2017-11-15 15:51:08 - [local][warning]   - ?[1mRX core util. is high: 88.1%?[22m
]]></system-out></testcase><testcase classname="stateless_tests.stl_capture_test.STLCapture_Test" name="test_stress_tx_rx" time="12.428"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_all_profiles" time="16.664"><system-out><![CDATA[
Profile: /stl/imix.py

Profile: /stl/syn_attack.py

Profile: /stl/udp_1pkt.py

Profile: /stl/udp_1pkt_tuple_gen.py

Profile: /stl/udp_rand_len_9k.py

Profile: /stl/udp_1pkt_1mac_override.py

Profile: /stl/udp_1pkt_1mac.py

Profile: /stl/udp_1pkt_mac.py

Profile: /stl/udp_1pkt_mpls.py

Profile: /stl/udp_1pkt_mpls_vm.py

Profile: /stl/udp_inc_len_9k.py

Profile: /stl/burst_3st_1000pkt.py

Profile: /stl/flow_stats.py
  * Skip due to RX caps requirement

Profile: /stl/multi_burst_2st_1000pkt.py

Profile: /stl/udp_1pkt_range_clients.py

Profile: /stl/burst_3st_600pkt.py

Profile: /stl/udp_1pkt_pcap.py

Profile: /stl/udp_3pkt_pcap.py

Profile: /stl/udp_1pkt_simple.py

Profile: /stl/udp_1pkt_pcap_relative_path.py

Profile: /stl/udp_1pkt_tuple_gen_split.py

Profile: /stl/udp_1pkt_range_clients_split.py

Profile: /stl/udp_1pkt_vxlan.py

Profile: /stl/udp_1pkt_ipv6_in_ipv4.py

Profile: /stl/udp_1pkt_simple_mac_dst.py

Profile: /stl/udp_1pkt_simple_mac_dst_src.py

Profile: /stl/udp_1pkt_simple_mac_src.py

Profile: /stl/simple_3st.py

Profile: /stl/udp_1pkt_mac_step.py

Profile: /stl/udp_1pkt_mac_mask2.py

Profile: /stl/udp_1pkt_dns.py

Profile: /stl/udp_1pkt_mac_mask3.py

Profile: /stl/udp_1pkt_mac_mask5.py

Profile: /stl/udp_1pkt_src_ip_split_latency.py
  * Skip due to RX caps requirement

Profile: /stl/udp_1pkt_simple_test.py

Profile: /stl/udp_1pkt_repeat_random.py

Profile: /stl/udp_1pkt_simple_test2.py

Profile: /stl/bench.py

Profile: /stl/flow_stats_latency.py
  * Skip due to RX caps requirement

Profile: /stl/udp_1pkt_1mac_step.py

Profile: /stl/udp_1pkt_range_clients_split_garp.py

Profile: /stl/udp_1pkt_simple_burst.py

Profile: /stl/burst_split.py

Profile: /stl/pcap_with_vm.py

Profile: /stl/udp_1pkt_simple_bdir.py

Profile: /stl/pcap.py

Profile: /stl/udp_1pkt_src_ip_split.py

Profile: /stl/udp_1pkt_mac_mask1.py

Profile: /stl/syn_attack_fix_cs_hw.py

Profile: /stl/udp_for_benchmarks.py

Profile: /stl/burst_3st_loop_x_times.py

Profile: /stl/burst_simple.py

Profile: /stl/imix_wlc.py
  * Skip due to global ignore of this profile...
]]></system-out></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_basic_connect_disconnect" time="0.231"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_basic_cont" time="0.946"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_basic_multi_burst" time="0.464"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_basic_single_burst" time="0.483"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_bpf" time="2.269"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_latency_pause_resume" time="0.782"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_pcap_remote" time="0.294"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_stress_connect_disconnect" time="13.304"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_stress_tx" time="2.308"></testcase><testcase classname="stateless_tests.stl_client_test.STLClient_Test" name="test_tx_from_rx" time="1.735"></testcase><testcase classname="stateless_tests.stl_examples_test.STLExamples_Test" name="test_stl_examples" time="11.423"><system-out><![CDATA[Running command: sh -c 'cd ../trex_control_plane/stl/examples; /router/bin//python-2.7.4 stl_imix.py -s 10.56.216.127'
Stdout:
Mapped ports to sides [0, 1] <--> [3, 2]
Injecting [0, 1] <--> [3, 2] on total rate of '30%' for 10 seconds

Packets injected from [0, 1]: 18,764,436
Packets injected from [3, 2]: 18,764,436

packets lost from [0, 1] --> [0, 1]:   0 pkts
packets lost from [3, 2] --> [3, 2]:   0 pkts

Test has passed :-)


]]></system-out></testcase><testcase classname="stateless_tests.stl_ipv6_test.STLIPv6_Test" name="test_stl_ipv6_ping" time="24.205"><system-out><![CDATA[
No IPv6 replies in loopback as expected.
Got no replies from unknown IPv6 as expected.
]]></system-out></testcase><testcase classname="stateless_tests.stl_ipv6_test.STLIPv6_Test" name="test_stl_ipv6_scan6" time="5.270"><system-out><![CDATA[
No devices found in loopback as expected.
]]></system-out></testcase><testcase classname="stateless_tests.stl_performance_test.STLPerformance_Test" name="test_performance_syn_attack_multi_cpus" time="71.152"><system-out><![CDATA[
Executing performance scenario: 'syn attack - 64 bytes, multi CPUs'

Step 1 - waiting for stabilization... (10 seconds)
..........

Step 2 - Waiting for samples... (60 seconds)
............................................................

scenario:                                syn attack - 64 bytes, multi CPUs
machine name:                            trex08
DP core count:                           7
average CPU:                             186.983333333
average Gbps:                            12.1601672021
average Mpps:                            23.7503267667
average pkt size (bytes):                63.9999994611
average Gbps per core (at 100% CPU):     6.50334283027
average Mpps per core (at 100% CPU):     12.7018415723

golden Mpps per core (at 100% CPU):      min: 10.7, max 15.3
]]></system-out></testcase><testcase classname="stateless_tests.stl_performance_test.STLPerformance_Test" name="test_performance_syn_attack_single_cpu" time="71.155"><system-out><![CDATA[
Executing performance scenario: 'syn attack - 64 bytes, single CPU'

Step 1 - waiting for stabilization... (10 seconds)
..........

Step 2 - Waiting for samples... (60 seconds)
............................................................

scenario:                                syn attack - 64 bytes, single CPU
machine name:                            trex08
DP core count:                           1
average CPU:                             100.0
average Gbps:                            6.65602861227
average Mpps:                            13.0000556333
average pkt size (bytes):                64.0000012308
average Gbps per core (at 100% CPU):     6.65602861227
average Mpps per core (at 100% CPU):     13.0000556333

golden Mpps per core (at 100% CPU):      min: 10.9, max 13.5
]]></system-out></testcase><testcase classname="stateless_tests.stl_performance_test.STLPerformance_Test" name="test_performance_vm_multi_cpus" time="71.121"><system-out><![CDATA[
Executing performance scenario: 'VM - 64 bytes, multi CPUs'

Step 1 - waiting for stabilization... (10 seconds)
..........

Step 2 - Waiting for samples... (60 seconds)
............................................................

scenario:                                VM - 64 bytes, multi CPUs
machine name:                            trex08
DP core count:                           7
average CPU:                             156.983333333
average Gbps:                            12.1604445013
average Mpps:                            23.7508684667
average pkt size (bytes):                63.9999991916
average Gbps per core (at 100% CPU):     7.74632837966
average Mpps per core (at 100% CPU):     15.1295478076

golden Mpps per core (at 100% CPU):      min: 10.5, max 18.0
]]></system-out></testcase><testcase classname="stateless_tests.stl_performance_test.STLPerformance_Test" name="test_performance_vm_multi_cpus_cached" time="71.126"><system-out><![CDATA[
Executing performance scenario: 'VM - 64 bytes, multi CPU, cache size 1024'

Step 1 - waiting for stabilization... (10 seconds)
..........

Step 2 - Waiting for samples... (60 seconds)
............................................................

scenario:                                VM - 64 bytes, multi CPU, cache size 1024
machine name:                            trex08
DP core count:                           7
average CPU:                             68.55
average Gbps:                            12.1608746325
average Mpps:                            23.7517076
average pkt size (bytes):                64.0000017964
average Gbps per core (at 100% CPU):     17.7401526368
average Mpps per core (at 100% CPU):     34.6487346462

golden Mpps per core (at 100% CPU):      min: 26.1, max 30.6
]]></system-out></testcase><testcase classname="stateless_tests.stl_performance_test.STLPerformance_Test" name="test_performance_vm_single_cpu" time="71.155"><system-out><![CDATA[
Executing performance scenario: 'VM - 64 bytes, single CPU'

Step 1 - waiting for stabilization... (10 seconds)
..........

Step 2 - Waiting for samples... (60 seconds)
............................................................

scenario:                                VM - 64 bytes, single CPU
machine name:                            trex08
DP core count:                           1
average CPU:                             100.0
average Gbps:                            8.13786496
average Mpps:                            15.8942675667
average pkt size (bytes):                63.9999997316
average Gbps per core (at 100% CPU):     8.13786496
average Mpps per core (at 100% CPU):     15.8942675667

golden Mpps per core (at 100% CPU):      min: 11.9, max 18.3
]]></system-out></testcase><testcase classname="stateless_tests.stl_performance_test.STLPerformance_Test" name="test_performance_vm_single_cpu_cached" time="71.152"><system-out><![CDATA[
Executing performance scenario: 'VM - 64 bytes, single CPU, cache size 1024'

Step 1 - waiting for stabilization... (10 seconds)
..........

Step 2 - Waiting for samples... (60 seconds)
............................................................

scenario:                                VM - 64 bytes, single CPU, cache size 1024
machine name:                            trex08
DP core count:                           1
average CPU:                             17.5833333333
average Gbps:                            3.04050448213
average Mpps:                            5.9384852
average pkt size (bytes):                64.0000012573
average Gbps per core (at 100% CPU):     17.2919686188
average Mpps per core (at 100% CPU):     33.773375545

golden Mpps per core (at 100% CPU):      min: 25.2, max 28.8
]]></system-out></testcase><testcase classname="stateless_tests.stl_rx_test.STLRX_Test" name="test_1_stream_many_iterations" time="66.539"><system-out><![CDATA[
num cores 14 num 9k mbufs 2048 num 4k mbufs 2048

injecting 1000 packets on port 0
Stream: Latency, with field engine of random packet size
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
Stream: Flow stat. No latency
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
Stream: Latency, no field engine
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
Stream: Latency, short packet with field engine
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
Stream: Latency, large packet field engine
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
Stream: Latency, 9k packet with field engine
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
Stream: Flow stat with vlan. No latency
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
Stream: IPv6 flow stat. No latency
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
Stream: IPv6 latency, no field engine
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
]]></system-out></testcase><testcase classname="stateless_tests.stl_rx_test.STLRX_Test" name="test_9k_stream" time="281.422"><system-out><![CDATA[
num cores 14 num 9k mbufs 2048 num 4k mbufs 2048
Iteration 0
 0 - duration 16 pgid 40497 pkt_size 3076 s_port [0] 
Latency results, Average 8 usec, ,Max 23 usec. 
===>Iteration 0 PASS 0
Iteration 1
 0 - duration 18 pgid 48895 pkt_size 6723 s_port [0, 2] 
Latency results, Average 4 usec, ,Max 16 usec. 
===>Iteration 1 PASS 0
Iteration 2
 0 - duration 47 pgid 34355 pkt_size 5096 s_port [0, 2] 
Latency results, Average 5 usec, ,Max 16 usec. 
===>Iteration 2 PASS 0
Iteration 3
 0 - duration 54 pgid 11579 pkt_size 1357 s_port [2] 
Latency results, Average 12 usec, ,Max 22 usec. 
===>Iteration 3 PASS 0
Iteration 4
 0 - duration 48 pgid 17406 pkt_size 3790 s_port [0, 2] 
Latency results, Average 4 usec, ,Max 302 usec. 
{'err_cntrs': {'dropped': 0,
               'dup': 0,
               'out_of_order': 0,
               'seq_too_high': 0,
               'seq_too_low': 0},
 'latency': {'average': 4.999999999940769,
             'histogram': {0: 47911, 10: 87, 30: 1, 100: 1, 300: 1},
             'jitter': 0,
             'last_max': 9,
             'total_max': 302,
             'total_min': 2}}
Max latency is too high 302 250 
{'rx_bps': {0: 0, 1: 0, 2: 0, 3: 0, 'total': 0},
 'rx_bps_l1': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 'total': 0.0},
 'rx_bytes': {0: 'N/A', 1: 'N/A', 2: 'N/A', 3: 'N/A', 'total': 'N/A'},
 'rx_pkts': {0: 0, 1: 0, 2: 0, 3: 48001, 'total': 48001},
 'rx_pps': {0: 0, 1: 0, 2: 0, 3: 0, 'total': 0},
 'tx_bps': {0: 0, 1: 0, 2: 0, 3: 0, 'total': 0},
 'tx_bps_l1': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 'total': 0.0},
 'tx_bytes': {0: 3312069, 1: 0, 2: 0, 3: 0, 'total': 3312069},
 'tx_pkts': {0: 48001, 1: 0, 2: 0, 3: 0, 'total': 48001},
 'tx_pps': {0: 0, 1: 0, 2: 0, 3: 0, 'total': 0}}
OrderedDict([(u'rx_good_packets', 49840532), (u'tx_good_packets', 0), (u'rx_good_bytes', 190808098857), (u'tx_good_bytes', 0), (u'rx_errors', 0), (u'tx_errors', 0), (u'rx_mbuf_allocation_errors', 0), (u'rx_q0packets', 0), (u'rx_q0bytes', 0), (u'rx_q0errors', 0), (u'rx_q1packets', 0), (u'rx_q1bytes', 0), (u'rx_q1errors', 0), (u'tx_q0packets', 0), (u'tx_q0bytes', 0), (u'tx_q1packets', 0), (u'tx_q1bytes', 0), (u'tx_q2packets', 0), (u'tx_q2bytes', 0), (u'tx_q3packets', 0), (u'tx_q3bytes', 0), (u'tx_q4packets', 0), (u'tx_q4bytes', 0), (u'tx_q5packets', 0), (u'tx_q5bytes', 0), (u'tx_q6packets', 0), (u'tx_q6bytes', 0), (u'tx_q7packets', 0), (u'tx_q7bytes', 0), (u'tx_q8packets', 0), (u'tx_q8bytes', 0), (u'rx_unicast_packets', 49840532), (u'rx_multicast_packets', 0), (u'rx_broadcast_packets', 0), (u'rx_dropped', 0), (u'rx_unknown_protocol_packets', 49840532), (u'tx_unicast_packets', 0), (u'tx_multicast_packets', 0), (u'tx_broadcast_packets', 0), (u'tx_dropped', 0), (u'tx_link_down_dropped', 0), (u'rx_crc_errors', 0), (u'rx_illegal_byte_errors', 0), (u'rx_error_bytes', 0), (u'mac_local_errors', 0), (u'mac_remote_errors', 0), (u'rx_length_errors', 0), (u'tx_xon_packets', 0), (u'rx_xon_packets', 0), (u'tx_xoff_packets', 0), (u'rx_xoff_packets', 0), (u'rx_size_64_packets', 0), (u'rx_size_65_to_127_packets', 48001), (u'rx_size_128_to_255_packets', 0), (u'rx_size_256_to_511_packets', 0), (u'rx_size_512_to_1023_packets', 0), (u'rx_size_1024_to_1522_packets', 0), (u'rx_size_1523_to_max_packets', 49792531), (u'rx_undersized_errors', 0), (u'rx_oversize_errors', 0), (u'rx_mac_short_dropped', 0), (u'rx_fragmented_errors', 0), (u'rx_jabber_errors', 0), (u'tx_size_64_packets', 0), (u'tx_size_65_to_127_packets', 0), (u'tx_size_128_to_255_packets', 0), (u'tx_size_256_to_511_packets', 0), (u'tx_size_512_to_1023_packets', 0), (u'tx_size_1024_to_1522_packets', 0), (u'tx_size_1523_to_max_packets', 0), (u'rx_flow_director_atr_match_packets', 0), (u'rx_flow_director_sb_match_packets', 0), (u'tx_low_power_idle_status', 0), (u'rx_low_power_idle_status', 0), (u'tx_low_power_idle_count', 0), (u'rx_low_power_idle_count', 0), (u'rx_priority0_xon_packets', 0), (u'rx_priority1_xon_packets', 0), (u'rx_priority2_xon_packets', 0), (u'rx_priority3_xon_packets', 0), (u'rx_priority4_xon_packets', 0), (u'rx_priority5_xon_packets', 0), (u'rx_priority6_xon_packets', 0), (u'rx_priority7_xon_packets', 0), (u'rx_priority0_xoff_packets', 0), (u'rx_priority1_xoff_packets', 0), (u'rx_priority2_xoff_packets', 0), (u'rx_priority3_xoff_packets', 0), (u'rx_priority4_xoff_packets', 0), (u'rx_priority5_xoff_packets', 0), (u'rx_priority6_xoff_packets', 0), (u'rx_priority7_xoff_packets', 0), (u'tx_priority0_xon_packets', 0), (u'tx_priority1_xon_packets', 0), (u'tx_priority2_xon_packets', 0), (u'tx_priority3_xon_packets', 0), (u'tx_priority4_xon_packets', 0), (u'tx_priority5_xon_packets', 0), (u'tx_priority6_xon_packets', 0), (u'tx_priority7_xon_packets', 0), (u'tx_priority0_xoff_packets', 0), (u'tx_priority1_xoff_packets', 0), (u'tx_priority2_xoff_packets', 0), (u'tx_priority3_xoff_packets', 0), (u'tx_priority4_xoff_packets', 0), (u'tx_priority5_xoff_packets', 0), (u'tx_priority6_xoff_packets', 0), (u'tx_priority7_xoff_packets', 0), (u'tx_priority0_xon_to_xoff_packets', 0), (u'tx_priority1_xon_to_xoff_packets', 0), (u'tx_priority2_xon_to_xoff_packets', 0), (u'tx_priority3_xon_to_xoff_packets', 0), (u'tx_priority4_xon_to_xoff_packets', 0), (u'tx_priority5_xon_to_xoff_packets', 0), (u'tx_priority6_xon_to_xoff_packets', 0), (u'tx_priority7_xon_to_xoff_packets', 0)])
 1 - duration 48 pgid 17406 pkt_size 3790 s_port [0, 2] 
Latency results, Average 8 usec, ,Max 309 usec. 
{'err_cntrs': {'dropped': 0,
               'dup': 0,
               'out_of_order': 0,
               'seq_too_high': 0,
               'seq_too_low': 0},
 'latency': {'average': 8.874023198848583,
             'histogram': {0: 37285, 10: 10712, 40: 2, 100: 1, 300: 1},
             'jitter': 1,
             'last_max': 12,
             'total_max': 309,
             'total_min': 2}}
Max latency is too high 309 250 
{'rx_bps': {0: 0, 1: 0, 2: 0, 3: 0, 'total': 0},
 'rx_bps_l1': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 'total': 0.0},
 'rx_bytes': {0: 'N/A', 1: 'N/A', 2: 'N/A', 3: 'N/A', 'total': 'N/A'},
 'rx_pkts': {0: 0, 1: 0, 2: 0, 3: 48001, 'total': 48001},
 'rx_pps': {0: 0, 1: 0, 2: 0, 3: 0, 'total': 0},
 'tx_bps': {0: 0, 1: 0, 2: 0, 3: 0, 'total': 0},
 'tx_bps_l1': {0: 0.0, 1: 0.0, 2: 0.0, 3: 0.0, 'total': 0.0},
 'tx_bytes': {0: 3312069, 1: 0, 2: 0, 3: 0, 'total': 3312069},
 'tx_pkts': {0: 48001, 1: 0, 2: 0, 3: 0, 'total': 48001},
 'tx_pps': {0: 0, 1: 0, 2: 0, 3: 0, 'total': 0}}
OrderedDict([(u'rx_good_packets', 49840532), (u'tx_good_packets', 0), (u'rx_good_bytes', 190808098857), (u'tx_good_bytes', 0), (u'rx_errors', 0), (u'tx_errors', 0), (u'rx_mbuf_allocation_errors', 0), (u'rx_q0packets', 0), (u'rx_q0bytes', 0), (u'rx_q0errors', 0), (u'rx_q1packets', 0), (u'rx_q1bytes', 0), (u'rx_q1errors', 0), (u'tx_q0packets', 0), (u'tx_q0bytes', 0), (u'tx_q1packets', 0), (u'tx_q1bytes', 0), (u'tx_q2packets', 0), (u'tx_q2bytes', 0), (u'tx_q3packets', 0), (u'tx_q3bytes', 0), (u'tx_q4packets', 0), (u'tx_q4bytes', 0), (u'tx_q5packets', 0), (u'tx_q5bytes', 0), (u'tx_q6packets', 0), (u'tx_q6bytes', 0), (u'tx_q7packets', 0), (u'tx_q7bytes', 0), (u'tx_q8packets', 0), (u'tx_q8bytes', 0), (u'rx_unicast_packets', 49840532), (u'rx_multicast_packets', 0), (u'rx_broadcast_packets', 0), (u'rx_dropped', 0), (u'rx_unknown_protocol_packets', 49840532), (u'tx_unicast_packets', 0), (u'tx_multicast_packets', 0), (u'tx_broadcast_packets', 0), (u'tx_dropped', 0), (u'tx_link_down_dropped', 0), (u'rx_crc_errors', 0), (u'rx_illegal_byte_errors', 0), (u'rx_error_bytes', 0), (u'mac_local_errors', 0), (u'mac_remote_errors', 0), (u'rx_length_errors', 0), (u'tx_xon_packets', 0), (u'rx_xon_packets', 0), (u'tx_xoff_packets', 0), (u'rx_xoff_packets', 0), (u'rx_size_64_packets', 0), (u'rx_size_65_to_127_packets', 48001), (u'rx_size_128_to_255_packets', 0), (u'rx_size_256_to_511_packets', 0), (u'rx_size_512_to_1023_packets', 0), (u'rx_size_1024_to_1522_packets', 0), (u'rx_size_1523_to_max_packets', 49792531), (u'rx_undersized_errors', 0), (u'rx_oversize_errors', 0), (u'rx_mac_short_dropped', 0), (u'rx_fragmented_errors', 0), (u'rx_jabber_errors', 0), (u'tx_size_64_packets', 0), (u'tx_size_65_to_127_packets', 0), (u'tx_size_128_to_255_packets', 0), (u'tx_size_256_to_511_packets', 0), (u'tx_size_512_to_1023_packets', 0), (u'tx_size_1024_to_1522_packets', 0), (u'tx_size_1523_to_max_packets', 0), (u'rx_flow_director_atr_match_packets', 0), (u'rx_flow_director_sb_match_packets', 0), (u'tx_low_power_idle_status', 0), (u'rx_low_power_idle_status', 0), (u'tx_low_power_idle_count', 0), (u'rx_low_power_idle_count', 0), (u'rx_priority0_xon_packets', 0), (u'rx_priority1_xon_packets', 0), (u'rx_priority2_xon_packets', 0), (u'rx_priority3_xon_packets', 0), (u'rx_priority4_xon_packets', 0), (u'rx_priority5_xon_packets', 0), (u'rx_priority6_xon_packets', 0), (u'rx_priority7_xon_packets', 0), (u'rx_priority0_xoff_packets', 0), (u'rx_priority1_xoff_packets', 0), (u'rx_priority2_xoff_packets', 0), (u'rx_priority3_xoff_packets', 0), (u'rx_priority4_xoff_packets', 0), (u'rx_priority5_xoff_packets', 0), (u'rx_priority6_xoff_packets', 0), (u'rx_priority7_xoff_packets', 0), (u'tx_priority0_xon_packets', 0), (u'tx_priority1_xon_packets', 0), (u'tx_priority2_xon_packets', 0), (u'tx_priority3_xon_packets', 0), (u'tx_priority4_xon_packets', 0), (u'tx_priority5_xon_packets', 0), (u'tx_priority6_xon_packets', 0), (u'tx_priority7_xon_packets', 0), (u'tx_priority0_xoff_packets', 0), (u'tx_priority1_xoff_packets', 0), (u'tx_priority2_xoff_packets', 0), (u'tx_priority3_xoff_packets', 0), (u'tx_priority4_xoff_packets', 0), (u'tx_priority5_xoff_packets', 0), (u'tx_priority6_xoff_packets', 0), (u'tx_priority7_xoff_packets', 0), (u'tx_priority0_xon_to_xoff_packets', 0), (u'tx_priority1_xon_to_xoff_packets', 0), (u'tx_priority2_xon_to_xoff_packets', 0), (u'tx_priority3_xon_to_xoff_packets', 0), (u'tx_priority4_xon_to_xoff_packets', 0), (u'tx_priority5_xon_to_xoff_packets', 0), (u'tx_priority6_xon_to_xoff_packets', 0), (u'tx_priority7_xon_to_xoff_packets', 0)])
 2 - duration 48 pgid 17406 pkt_size 3790 s_port [0, 2] 
Latency results, Average 4 usec, ,Max 20 usec. 
===>Iteration 4 PASS 2
]]></system-out></testcase><testcase classname="stateless_tests.stl_rx_test.STLRX_Test" name="test_fcs_stream" time="0.556"><system-out><![CDATA[
num cores 14 num 9k mbufs 2048 num 4k mbufs 2048

Sending from ports: [0, 1, 2, 3], has latency: True 

Sending from ports: [0, 1, 2, 3], has latency: False 
]]></system-out></testcase><testcase classname="stateless_tests.stl_rx_test.STLRX_Test" name="test_incremental_latency_streams" time="29.832"><system-out><![CDATA[
num cores 14 num 9k mbufs 2048 num 4k mbufs 2048
port 0 : 1 streams at 0.5% of line rate

port 0 : 2 streams at 1.0% of line rate

port 0 : 3 streams at 1.5% of line rate

port 0 : 4 streams at 2.0% of line rate

port 0 : 5 streams at 2.5% of line rate

port 0 : 6 streams at 3.0% of line rate

port 0 : 7 streams at 3.5% of line rate

port 0 : 8 streams at 4.0% of line rate

port 0 : 9 streams at 4.5% of line rate

port 0 : 10 streams at 5.0% of line rate

port 0 : 11 streams at 5.5% of line rate

port 0 : 12 streams at 6.0% of line rate

port 0 : 13 streams at 6.5% of line rate

port 0 : 14 streams at 7.0% of line rate

port 0 : 15 streams at 7.5% of line rate

port 0 : 16 streams at 8.0% of line rate

port 0 : 17 streams at 8.5% of line rate

port 0 : 18 streams at 9.0% of line rate

port 0 : 19 streams at 9.5% of line rate

port 0 : 20 streams at 10.0% of line rate

port 0 : 21 streams at 10.5% of line rate

port 0 : 22 streams at 11.0% of line rate

port 0 : 23 streams at 11.5% of line rate

port 0 : 24 streams at 12.0% of line rate

port 0 : 25 streams at 12.5% of line rate

port 0 : 26 streams at 13.0% of line rate

port 0 : 27 streams at 13.5% of line rate

port 0 : 28 streams at 14.0% of line rate

port 0 : 29 streams at 14.5% of line rate

port 0 : 30 streams at 15.0% of line rate

port 0 : 31 streams at 15.5% of line rate

port 0 : 32 streams at 16.0% of line rate

port 0 : 33 streams at 16.5% of line rate

port 0 : 34 streams at 17.0% of line rate

port 0 : 35 streams at 17.5% of line rate

port 0 : 36 streams at 18.0% of line rate

port 0 : 37 streams at 18.5% of line rate

port 0 : 38 streams at 19.0% of line rate

port 0 : 39 streams at 19.5% of line rate

port 0 : 40 streams at 20.0% of line rate

port 0 : 41 streams at 20.5% of line rate

port 0 : 42 streams at 21.0% of line rate

port 0 : 43 streams at 21.5% of line rate

port 0 : 44 streams at 22.0% of line rate

port 0 : 45 streams at 22.5% of line rate

port 0 : 46 streams at 23.0% of line rate

port 0 : 47 streams at 23.5% of line rate

port 0 : 48 streams at 24.0% of line rate

port 0 : 49 streams at 24.5% of line rate

port 0 : 50 streams at 25.0% of line rate

port 0 : 51 streams at 25.5% of line rate

port 0 : 52 streams at 26.0% of line rate

port 0 : 53 streams at 26.5% of line rate

port 0 : 54 streams at 27.0% of line rate

port 0 : 55 streams at 27.5% of line rate

port 0 : 56 streams at 28.0% of line rate

port 0 : 57 streams at 28.5% of line rate

port 0 : 58 streams at 29.0% of line rate

port 0 : 59 streams at 29.5% of line rate

port 0 : 60 streams at 30.0% of line rate

port 0 : 61 streams at 30.5% of line rate

port 0 : 62 streams at 31.0% of line rate

port 0 : 63 streams at 31.5% of line rate

port 0 : 64 streams at 32.0% of line rate

port 0 : 65 streams at 32.5% of line rate

port 0 : 66 streams at 33.0% of line rate

port 0 : 67 streams at 33.5% of line rate

port 0 : 68 streams at 34.0% of line rate

port 0 : 69 streams at 34.5% of line rate

port 0 : 70 streams at 35.0% of line rate

port 0 : 71 streams at 35.5% of line rate

port 0 : 72 streams at 36.0% of line rate

port 0 : 73 streams at 36.5% of line rate

port 0 : 74 streams at 37.0% of line rate

port 0 : 75 streams at 37.5% of line rate

port 0 : 76 streams at 38.0% of line rate

port 0 : 77 streams at 38.5% of line rate

port 0 : 78 streams at 39.0% of line rate

port 0 : 79 streams at 39.5% of line rate

port 0 : 80 streams at 40.0% of line rate

port 0 : 81 streams at 40.5% of line rate

port 0 : 82 streams at 41.0% of line rate

port 0 : 83 streams at 41.5% of line rate

port 0 : 84 streams at 42.0% of line rate

port 0 : 85 streams at 42.5% of line rate

port 0 : 86 streams at 43.0% of line rate

port 0 : 87 streams at 43.5% of line rate

port 0 : 88 streams at 44.0% of line rate

port 0 : 89 streams at 44.5% of line rate

port 0 : 90 streams at 45.0% of line rate

port 0 : 91 streams at 45.5% of line rate

port 0 : 92 streams at 46.0% of line rate

port 0 : 93 streams at 46.5% of line rate

port 0 : 94 streams at 47.0% of line rate

port 0 : 95 streams at 47.5% of line rate

port 0 : 96 streams at 48.0% of line rate

port 0 : 97 streams at 48.5% of line rate

port 0 : 98 streams at 49.0% of line rate

port 0 : 99 streams at 49.5% of line rate

port 0 : 100 streams at 50.0% of line rate

port 0 : 101 streams at 50.5% of line rate

port 0 : 102 streams at 51.0% of line rate

port 0 : 103 streams at 51.5% of line rate

port 0 : 104 streams at 52.0% of line rate

port 0 : 105 streams at 52.5% of line rate

port 0 : 106 streams at 53.0% of line rate

port 0 : 107 streams at 53.5% of line rate

port 0 : 108 streams at 54.0% of line rate

port 0 : 109 streams at 54.5% of line rate

port 0 : 110 streams at 55.0% of line rate

port 0 : 111 streams at 55.5% of line rate

port 0 : 112 streams at 56.0% of line rate

port 0 : 113 streams at 56.5% of line rate

port 0 : 114 streams at 57.0% of line rate

port 0 : 115 streams at 57.5% of line rate

port 0 : 116 streams at 58.0% of line rate

port 0 : 117 streams at 58.5% of line rate

port 0 : 118 streams at 59.0% of line rate

port 0 : 119 streams at 59.5% of line rate

port 0 : 120 streams at 60.0% of line rate

port 0 : 121 streams at 60.5% of line rate

port 0 : 122 streams at 61.0% of line rate

port 0 : 123 streams at 61.5% of line rate

port 0 : 124 streams at 62.0% of line rate

port 0 : 125 streams at 62.5% of line rate

port 0 : 126 streams at 63.0% of line rate

port 0 : 127 streams at 63.5% of line rate

port 0 : 1 streams at 0.5% of line rate

port 0 : 2 streams at 1.0% of line rate

port 0 : 3 streams at 1.5% of line rate

port 0 : 4 streams at 2.0% of line rate

]]></system-out></testcase><testcase classname="stateless_tests.stl_rx_test.STLRX_Test" name="test_multiple_streams" time="0.756"><system-out><![CDATA[
num cores 14 num 9k mbufs 2048 num 4k mbufs 2048
num_latency_streams:128
num_flow_stat_streams:127
]]></system-out></testcase><testcase classname="stateless_tests.stl_rx_test.STLRX_Test" name="test_multiple_streams_random" time="61.812"><system-out><![CDATA[
num cores 14 num 9k mbufs 2048 num 4k mbufs 2048
num_latency_streams:103
  total percent:1.0 (0.00970873786408 per stream)
num_flow_stat_streams:65
  total percent:10.0 (0.153846153846 per stream)
Duration: 60
]]></system-out></testcase><testcase classname="stateless_tests.stl_rx_test.STLRX_Test" name="test_one_stream" time="0.139"><system-out><![CDATA[
num cores 14 num 9k mbufs 2048 num 4k mbufs 2048

injecting 1000 packets on port 0

]]></system-out></testcase><testcase classname="stateless_tests.stl_rx_test.STLRX_Test" name="test_x710_counters_wraparound" time="26.908"><system-out><![CDATA[
num cores 14 num 9k mbufs 2048 num 4k mbufs 2048

injecting 300000000 packets on port 0

]]></system-out></testcase><testcase classname="stateless_tests.stl_services_test.STLServices_Test" name="test_arp_service" time="3.760"></testcase></testsuite>